     Live Edits {
        datasnackbar: false,
        datasnackbarColor: '',
        datasnackbarText: '',
        max25chars: v => v.length <= 25 || 'Input too long!',
        pagination: {},
        headers: [
          {
            text: 'Dessert (100g serving)',
            align: 'left',
            sortable: false,
            value: 'name'
          },
          { text: 'Dates', value: 'Dates' },
          { text: 'Times (g)', value: 'Times' },
          { text: 'Location (g)', value: 'Location' },
          { text: 'Status (g)', value: 'Status' },
          { text: 'Hours (%)', value: 'Hours' }
        ],
        Times: [
          {
            name: 'Frozen Yogurt',
            Dates: 159,
            Times: 6.0,
            Location: 24,
            Status: 4.0,
            Hours: '1%'
          },
          {
            name: 'Ice cream sandwich',
            Dates: 237,
            Times: 9.0,
            Location: 37,
            Status: 4.3,
            Hours: '1%'
          },
          {
            name: 'Eclair',
            Dates: 262,
            Times: 16.0,
            Location: 23,
            Status: 6.0,
            Hours: '7%'
          },
          {
            name: 'Cupcake',
            Dates: 305,
            Times: 3.7,
            Location: 67,
            Status: 4.3,
            Hours: '8%'
          },
          {
            name: 'Gingerbread',
            Dates: 356,
            Times: 16.0,
            Location: 49,
            Status: 3.9,
            Hours: '16%'
          },
          {
            name: 'Jelly bean',
            Dates: 375,
            Times: 0.0,
            Location: 94,
            Status: 0.0,
            Hours: '0%'
          },
          {
            name: 'Lollipop',
            Dates: 392,
            Times: 0.2,
            Location: 98,
            Status: 0,
            Hours: '2%'
          },
          {
            name: 'Honeycomb',
            Dates: 408,
            Times: 3.2,
            Location: 87,
            Status: 6.5,
            Hours: '45%'
          },
          {
            name: 'Donut',
            Dates: 452,
            Times: 25.0,
            Location: 51,
            Status: 4.9,
            Hours: '22%'
          },
          {
            name: 'KitKat',
            Dates: 518,
            Times: 26.0,
            Location: 65,
            Status: 7,
            Hours: '6%'
          }
        ]
      }
    },
    methods: {
      saveData () {
        this.datasnackbar = true
        this.datasnackbarColor = 'success'
        this.snackText = 'Data saved'
      },
      cancelData () {
        this.datasnackbar = true
        this.datasnackbarColor = 'error'
        this.snackText = 'Canceled'
      },
      openData () {
        this.datasnackbar = true
        this.datasnackbarColor = 'info'
        this.datasnackbarColor = 'Dialog opened'
      },
      closeData () {
        console.log('Dialog closed')
      }
    }
  }

  // This is the start of the page code

<template>
  <div>
    <v-data-table
      :headers="headers"
      :items="Times"
    >
      <template v-slot:items="props">
        <td>
          <v-edit-dialog
            :return-value.sync="props.item.name"
            lazy
            @saveData="saveData"
            @cancelData="cancelData"
            @openData="open"
            @closeData="close"
          > {{ props.item.name }}
            <template v-slot:input>
              <v-text-field
                v-model="props.item.name"
                :rules="[max25chars]"
                label="Edit"
                single-line
                counter
              ></v-text-field>
            </template>
          </v-edit-dialog>
        </td>
        <td class="text-xs-right">{{ props.item.Dates }}</td>
        <td class="text-xs-right">{{ props.item.Times }}</td>
        <td class="text-xs-right">{{ props.item.Location }}</td>
        <td class="text-xs-right">{{ props.item.Status }}</td>
        <td class="text-xs-right">
          <v-edit-dialog
            :return-value.sync="props.item.Hours"
            large
            lazy
            persistent
            @saveData="save"
            @cancelData="cancel"
            @openData="open"
            @closeData="close"
          >
            <div>{{ props.item.Hours }}</div>
            <template v-slot:input>
              <div class="mt-3 title">Update Hours</div>
            </template>
            <template v-slot:input>
              <v-text-field
                v-model="props.item.Hours"
                :rules="[max25chars]"
                label="Edit"
                single-line
                counter
                autofocus
              ></v-text-field>
            </template>
          </v-edit-dialog>
        </td>
      </template>
    </v-data-table>

    <v-snackbar v-model="snack" :timeout="3000" :color="snackColor">
      {{ snackText }}
      <v-btn flat @click="snack = false">Close</v-btn>
    </v-snackbar>
  </div>
</template>